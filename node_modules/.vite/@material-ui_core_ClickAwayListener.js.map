{
  "version": 3,
  "sources": ["../@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js", "../@material-ui/core/esm/utils/ownerDocument.js", "dep:@material-ui_core_ClickAwayListener"],
  "sourcesContent": ["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var activatedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(function () {\n      activatedRef.current = true;\n    }, 0);\n    return function () {\n      activatedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;", "export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}", "import d from \"./node_modules/@material-ui/core/esm/ClickAwayListener/index.js\";export default d;"],
  "mappings": "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",
  "names": []
}
