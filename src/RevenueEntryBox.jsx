import React, {useState} from 'react';
//import Tooltip from '@material-ui/core/Tooltip';

//import Grid from '@material-ui/core/Grid';
import Button from '@material-ui/core/Button';
import Tooltip from '@material-ui/core/Tooltip';
import ClickAwayListener from '@material-ui/core/ClickAwayListener';

import './App.css';




let adderArray = [
{ name: "Medical Center", value: 0, index: 0},
{ name: "State of California", value: 0, index: 1},
{ name: "Tuition", value: 0, index: 2},
{ name: "Student Fees", value: 0, index: 3},
{ name: "Grants and Contracts", value: 0, index: 4},
{ name: "Non-educational Services", value: 0, index: 5},
{ name: "Gifts, Endowments, Interest, Etc.", value: 0, index: 6},
{ name: "Other", value: 0, index: 7} ];




let n = -1; 
let sum = 0; 
let prevSum = 0;
let newVal = 0;
function Revenue(props) { //Data Entry Component

  const [open, setOpen] = React.useState(false);

  const handleTooltipClose = () => {
    setOpen(false);
  };

  const handleTooltipOpen = () => {
    setOpen(true);
  };
  
  const onChildType = props.onChildType;
  



  let revenueData = [ 
      { name: "Medical Center", value: 45, color: '#F0BF00', text: 'A large, not-for-profit regional medical center, including multiple hospitals, labs and clinics. Income comes from patients, medical insurance companies, and government programs like medicare.' }, 
      { name: "State of California", value: 8, color: '#F6E50E', text: 'General funds given by the taxpayers of California, appropriated annualy by the state legislature. General funds are not dedicated to specific services.' }, 
      { name: "Tuition", value: 11 , color: '#FFF688', text: 'Students pay tuition to attend the University. Non-California residents pay about twice as much as residents.  Tuition is also general funds.' }, 
      { name: "Student Fees", value: 4, color: '#5F63EC', text: 'Fees are dedicated to specific services, such as athletic facilities, bus service (UNITRANS), student organizations, the CoHo and Student Community Center, etc.' }, 
      { name: "Grants and Contracts", value: 14, color: '#71A8FF', text: 'Government and industry funds given to faculty and graduate students to perform research projects. These include up to 50% overhead in addition to the cost of the research.' },
      { name: "Non-educational Services", value: 11 ,color: '#58C9FB', text: 'Services other than education that people pay for, like dorms, dining, parking, etc.  At UC Davis, this also includes almost $500M of revenue generated by medical school faculty, or 8%, making this category look really big.' }, 
      { name: "Gifts, Endowments, Interest, Etc.", value: 7, color: '#0F7A8B', text: 'Endowments are past gifts that were invested to provide income; interest is earned on other savings. The Museum is the direct result of a $10M gift from Jan Shrem and Maria Manetti Shrem.' },
      { name: "Other", value: 0, color: '#D4E4FF', text: 'Miscellaneous.'} 
    ];

  function changeColor (name) {
    for (let i=0; i<revenueData.length; i++) {
      if (revenueData[i].name == {name}.name) {
        //console.log("***************************", {name}.name);
        return revenueData[i].color;
      }
    }
  }

  function changeInfo(name) {
    //console.log("rev data i",revenueData[0].text);
    //console.log(revenueData[0].name);
    for (let i=0; i<revenueData.length; i++) {
      //console.log("***(*(****(*((**(*(*(*(",{name}.name, revenueData[i]);
      if (revenueData[i].name == {name}.name) {
        //console.log("***************************", {name}.name);
        return revenueData[i].text;
      }
    }
  }

  function onChange(event) {
    if (event.target.value === '') {
      console.log({name: event.target.name, value: 0});
      onChildType(event.target.name, 0, "rev");
       for (let i = 0; i < adderArray.length; i++ ){
         if (adderArray[i].name == event.target.name){ 
           n= i; 
         }
       }
      adderArray[n].value = 0;
      addUp(adderArray, n);
    }
    else {
      console.log({name: event.target.name, value: parseInt(event.target.value)});
      let total = document.getElementById("totalR").value;
      console.log('total:', total)
      if (total != 100){
        onChildType(event.target.name, parseInt(event.target.value), "rev");
        
        //  for (let i = 0; i < adderArray.length; i++){   
        //    if (adderArray[i].name == event.target.name){   
        //     adderArray[i].value = event.target.value;
        //     n = i;
        //  }
        // }  

      }
 
        
        for (let i = 0; i < adderArray.length; i++){   
            if (adderArray[i].name == event.target.name){   
               adderArray[i].value = event.target.value;
            n = i;
         }
        }  
        
    //  if(event.target.value.length == 1 && event.target.value == 0){
    //    let zeroEnter = document.getElementsByClassName("percentage");
    //for (let i = 0; i < adderArray.length; i++ ){
    
      // n = -1;
      console.log("adderArray: ", adderArray);
      addUp(adderArray, n);

    }
  }

  function addUp(array, lastElement){
    sum = 0;
    console.log("ARRAY LENGTH: ", array.length);
    console.log("adderArray in addUp: ", array);

     for (let i = 0; i < array.length; i++ ){
        console.log(array[i].value);
        sum +=  parseInt(array[i].value);
     }

    let totalLine = document.getElementById("totalR");
    
    console.log('SUM: ', sum)
    let inputChange = document.getElementsByClassName("percentage");
    if (sum > 100){
      totalLine.value = 100;
      console.log('HERE', inputChange[array[lastElement].index].value )
      if (inputChange[array[lastElement].index].value.length > 1){
        newVal = (100 - prevSum) +  parseInt(inputChange[array[lastElement].index].value[0])}
      else { 
        newVal = (100 - prevSum)
      }
      if (newVal <= 0){
        inputChange[array[lastElement].index].value = ''
        onChildType(array[lastElement].name, 0, "rev");
      } 
      else{
        console.log('HERLP')
        inputChange[array[lastElement].index].value = newVal
        onChildType(array[lastElement].name, newVal, "rev");
      }
      prevSum = sum;
      sum = 0;
      n=0;
      console.log('Fail')
      return false 

    }
    // if (sum == 100){
    //    inputChange[array[lastElement].index].value = '';
      
    // }

    else {
      if (sum == 0){
         totalLine.value = ''; 
      }
      else{
        totalLine.value = sum; 
      }
      prevSum = sum;
      sum = 0;
      return true 
    }

   
  }

  return (
    <div className="name">
      <div className="circle" style={{backgroundColor: changeColor(props.name)}}> </div>
      {props.name}

      <div class="tooltip"> 
        <div class = "iCircle">.i</div>
        <span class="tooltiptext">{changeInfo(props.name)}</span>
      </div>
        
      
      
      <input 
        type="numeric" 
        className='percentage'
        name={props.name} 
        placeholder="0%" 
        onChange={onChange}
      />
      
      {/*
      <span className = 'percent'>
        <input type="numeric" 
          name={props.name} 
          placeholder="0%" 
          onClick = {onClick}
          onChange={onChange}/>%
      </span>
      */}
      
    </div>
  )
}

export default Revenue;
