
import React, { useState, useEffect, useRef } from 'react';
import Option from './Option.jsx';
import PieChart from './PieChartClass.jsx'

function Revenues(props){
  const show_total = useRef(null);
  const show_percentage = useRef(null);
  const[need_update, set_need_update] = useState(false);

  function update_handler(){
    set_need_update(true)
  }

  function add_sum(){
    let sum = +props.inputs[0] + +props.inputs[1] + +props.inputs[2] + +props.inputs[3] + +props.inputs[4] + +props.inputs[5] + +props.inputs[6] + +props.inputs[7];
    props.updateinputs[8](sum);
    props.updateinputs[9](100 - sum);
    set_need_update(false);
  }

  
  const pieData = [
      { name: 'Medical center',  value: parseInt(props.inputs[0]), color: '#f0bf00' },
      { name: "Student Fees", value: parseInt(props.inputs[1]), color: '#f6e50e'},
      { name: "State of California", value: parseInt(props.inputs[2]), color: '#fff688'},
      { name: "Tuition", value: parseInt(props.inputs[3]), color: '#5f63e3'},
      { name: "Research Grants and Contracts", value: parseInt(props.inputs[4]), color: '#71a8ff'},
      { name: "Pell Grants", value: parseInt(props.inputs[5]), color:"#58C9FB" },
      { name: "Non-educationsal Services", value: parseInt(props.inputs[6]), color:"#0F7AB4" },
      { name: "Gifts, Endowments, Interest, etc", value: parseInt(props.inputs[7]), color:"#D4E4FF" }
  ];

  
  useEffect(() => {
    if(props.inputs[8] != 0 && props.stage == 1){
      show_percentage.current.style.color = "white";
      show_total.current.style.color = "white";
    }
    if (need_update && props.stage == 1){
      show_percentage.current.style.color = "white";
      show_total.current.style.color = "white";
      add_sum();
    }
  });
    
  
  
  if(props.stage == 1){
    return(
      <div>   
          <h4>UC Davis Revenues</h4>

          <div className="graph_container">
              <PieChart data={pieData} />
          </div>

          <div className="function_row">
            <span>Function</span>
            <span>Available: {props.inputs[9]} %</span>
          </div>
            <Option name="Medical center" color="#F0BF00" input_func={props.updateinputs[0]} onchange={update_handler} total={props.inputs[8]- +props.inputs[0]} input = {props.inputs[0]} isrestart = {props.isrestart}info = "A large, not-for-profit regional medical center, including multiple hospitals, labs and clinics. Income comes from patients, medical insurance companies, and government programs like medicare."/>

            <Option name="Student Fees" color="#F6E50E" input_func={props.updateinputs[1]} onchange={update_handler} total={props.inputs[8]- +props.inputs[1]} input = {props.inputs[1]} isrestart = {props.isrestart} info = "Fees are dedicated to specific services, such as athletic facilities, bus service (UNITRANS), student organizations, the CoHo and Student Community Center, etc. "/>

            <Option name="State of California" color="#FFF688" input_func={props.updateinputs[2]} onchange={update_handler} total={props.inputs[8]- +props.inputs[2]} input = {props.inputs[2]} isrestart = {props.isrestart} info = "General funds given by the taxpayers of California, appropriated annualy by the state legislature. General funds are not dedicated to specific services."/>

            <Option name="Tuition" color="#5F63EC" input_func={props.updateinputs[3]} onchange={update_handler} total={props.inputs[8]- +props.inputs[3]} input = {props.inputs[3]} isrestart = {props.isrestart}info = "Students pay tuition to attend the University. Non-California residents pay about twice as much as residents.  Tuition is also general funds."/>

            <Option name="Research Grants and Contracts" color="#71A8FF" input_func={props.updateinputs[4]} onchange={update_handler} total={props.inputs[8]- +props.inputs[4]} input = {props.inputs[4]} isrestart = {props.isrestart} info = "Government and industry funds given to faculty and graduate students to perform research projects. These include up to 50% overhead in addition to the cost of the research."/>

            <Option name="Pell Grants" color="#58C9FB" input_func={props.updateinputs[5]} onchange={update_handler} total={props.inputs[8]- +props.inputs[5]} input = {props.inputs[5]} isrestart = {props.isrestart} info = "Federal grants for tuition and living expenses for low-income students. Percentage of students with Pell grants is a good way to measure who a University serves; at UCD, it's 34%; at Cal Tech it's 14%; at Sac State it's 71%."/>

            <Option name="Non-educationsal Services" color="#0F7AB4" input_func={props.updateinputs[6]} onchange={update_handler} total={props.inputs[8]- +props.inputs[6]} input = {props.inputs[6]} isrestart = {props.isrestart} info = "Services other than education that people pay for, like dorms, dining, parking, etc.  At UC Davis, this also includes almost $500M of revenue generated by medical school faculty, or 8%, making this category look really big."/>

            <Option name="Gifts, Endowments, Interest, etc" color="#D4E4FF" input_func={props.updateinputs[7]} onchange={update_handler} total={props.inputs[8]- +props.inputs[7]} input = {props.inputs[7]} isrestart = {props.isrestart} info = "Endowments are past gifts that were invested to provide income; interest is earned on other savings. The Museum is the direct result of a $10M gift from Jan Shrem and Maria Manetti Shrem."/>

           <div className='total_row'>
            <span id="total_text">Total</span>
            <div className="option_input">
              <span id="total_input" ref={show_total}>{props.inputs[8]}</span>
              <span className="percentages"ref={show_percentage}>%</span>
            </div>
          </div>
          <div className="btn_2">
            <button className="btn" onClick={
            () => {props.nextstage(2);}}>Next</button>
          </div>
      </div>
    )
    
  }
  else if(props.stage ==3){
    return(
          <div className="graph_container">
              <PieChart data={pieData} />
          </div>

    )
  }
  return null;

}

export default Revenues;


